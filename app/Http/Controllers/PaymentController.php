<?php
//--- This code is generated by ProBot ---
namespace App\Http\Controllers;
use App\Http\Controllers\Controller;
use App\Models\Payment;
use App\Models\Customer;
use App\Models\Supplier;
use App\Models\Purchase;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;
use Illuminate\Support\Facades\View;
use App\Models\Setting;
class PaymentController extends Controller{
	// public function __construct()
    // {
    //     $this->middleware('auth');
    // }
	public function index(Request $request){
		$from=$request['formOrder']?? "";
        $to=$request['toOrder']?? "";
        if($from!="" && $to!=""){
		$payments=Payment::with('supplier')->whereBetween('paymnet_date', [$from, $to])->get();
		return view("pages.payment.index_payment",["payments"=>$payments,"from"=>$from,"to"=>$to]);
		}else{
			$payments=Payment::with('supplier')->orderBy('id','DESC')->paginate(10);
			return view("pages.payment.index_payment",["payments"=>$payments,"from"=>$from,"to"=>$to]);
		}
	}
	public function create(){
		$suppliers=Supplier::all();

		return view("pages.payment.create_payment",["suppliers"=>$suppliers]);
	}
	public function store(Request $request){
//		Payment::create($request->all());
		$payment=new Payment;
		$payment->supplier_id=$request->cmbSupplier;
		$payment->payment_type=$request->paymentType;
		$payment->amount=$request->paymentAmount;
		$payment->payment_date=date("Y-m-d",strtotime($request->paymentDate));
		$payment->payment_note=$request->txtNote;
		$payment->save();
		$p_id=$payment->id;
		$site= Setting::first();
		$payments=DB::select("SELECT p.id,s.name,p.amount,p.payment_date,p.payment_note,p.payment_type from lc_payments p,lc_suppliers s where s.id=p.supplier_id and p.id='$p_id'");

		return response()->json([
            'view'=>(String)View::make("pages.payment.print_payment_invoice",["payments"=>$payments,"site"=>$site])
          
        ]);
		//return back()->with('success','Payment Completed Successfully.');
  
	}
	public function show($id){
		$payment=Payment::find($id);
		return view("pages.payment.show_payment",["payment"=>$payment]);
	}
	public function edit($id){
		$supplier=Supplier::select('id','name')->get();
		$payment=Payment::find($id);
		return view("pages.payment.edit_payment",['payment'=>$payment,'suppliers'=>$supplier]);
	}
	public function update($id,Request $request){
		$payment=Payment::find($id);
		$payment->supplier_id=$request->cmbSupplier;
		$payment->payment_type=$request->paymentType;
		$payment->amount=$request->paymentAmount;
		$payment->payment_date=date("Y-m-d",strtotime($request->paymentDate));
		$payment->payment_note=$request->txtNote;
		$payment->update();
		return redirect()->route("payments.index")->with('success','Updated Successfully.');
    
	}
	public function destroy(Payment $payment){
		$payment->delete();
		return redirect()->route("payments.index")->with('success','Deleted Successfully.');
	}
	public function getPayment(Request $req){
		
		$purchase=Purchase::select('total_amount')->where('supplier_id',$req->id)->sum('total_amount');
		$payment=Payment::select('amount')->where('supplier_id',$req->id)->sum('amount');
		$total=$purchase-$payment;
		return json_encode($total);
		// $payment=DB::select("select o.id,od.price,od.qty,od.discount from lc_orders o,lc_order_details od where o.customer_id='$id' and o.id=od.order_id");
		
	}
	public function paymentDelete(Request $request)
    {
		if ($request->ajax()) {
            $data = $request->all();

            $user = Payment::find($data['id']);
            if (!is_null($user)) {
                $user->delete();
            }
            return response()->json([
                'success' => true
            ]);
        }

    }
}
